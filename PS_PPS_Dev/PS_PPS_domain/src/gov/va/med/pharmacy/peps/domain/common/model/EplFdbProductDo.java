/**
 * Source file created in 2011 by Southwest Research Institute
 * 
 * Generated Oct 25, 2011 3:04:47 PM by Hibernate Tools 3.2.4.GA
 */


package gov.va.med.pharmacy.peps.domain.common.model;


import java.util.Date;


/**
 * EplFdbProductDo generated by hbm2java
 * 
 * @hibernate.class
 */
public class EplFdbProductDo extends
        gov.va.med.pharmacy.peps.domain.common.model.DataObject implements
        java.io.Serializable {

    // Fields
    public static final String PRODUCT_ID_FK = "productIdFk";
    public static final String DD_CONCEPT_TYPE = "ddConceptType";
    
    private static final long serialVersionUID = 1L; 

    private Long productIdFk;
    private String dgGenericDosageForm;
    private String dgGenericDrugName;
    private String dgHasPackagedDrugs;
    private Long dgGenericDrugId;
    private String dgRoute;
    private String dgSingleIngredient;
    private String dgStrength;
    private String ddConceptType;
    private String ddDosageForm;
    private String ddFederalDeaClassCode;
    private Long ddGcnSeqno;
    private String ddHasPackagedDrugs;
    private Long ddDispenseDrugId;
    private String ddMultisource;
    private String ddDispenseDrugName;
    private String ddObsoleteDate;
    private String ddReplaced;
    private String ddRoute;
    private String ddStatusCode;
    private String ddStrength;
    private String ddStrengthUnit;
    private String createdBy;
    private Date createdDtm;
    private String lastModifiedBy;
    private Date lastModifiedDtm;

    /**
     * Default Constructor
     */
    public EplFdbProductDo() {
    }

    /**
     *  Minimal Constructor
     *  
     * @param eplId
     * @param ddConceptType
     * @param createdBy
     * @param createdDtm
     * @param eplProduct
     */
    public EplFdbProductDo(Long productIdFk, String ddConceptType,
            String createdBy, Date createdDtm, EplProductDo eplProduct) {
        this.productIdFk = productIdFk;
        this.ddConceptType = ddConceptType;
        this.createdBy = createdBy;
        this.createdDtm = createdDtm;
    }

    /**
     * Full Constructor
     * 
     * @param eplId
     * @param dgGenericDosageForm
     * @param dgGenericDrugName
     * @param dgHasPackagedDrugs
     * @param dgGenericDrugId
     * @param dgRoute
     * @param dgSingleIngredient
     * @param dgStrength
     * @param ddConceptType
     * @param ddDosageForm
     * @param ddFederalDeaClassCode
     * @param ddGcnSeqno
     * @param ddHasPackagedDrugs
     * @param ddDispenseDrugId
     * @param ddMultisource
     * @param ddDispenseDrugName
     * @param ddObsoleteDate
     * @param ddReplaced
     * @param ddRoute
     * @param ddStatusCode
     * @param ddStrength
     * @param ddStrengthUnit
     * @param createdBy
     * @param createdDtm
     * @param lastModifiedBy
     * @param lastModifiedDtm
     * @param eplProduct
     */
    public EplFdbProductDo(Long productIdFk, String dgGenericDosageForm,
            String dgGenericDrugName, String dgHasPackagedDrugs,
            Long dgGenericDrugId, String dgRoute,
            String dgSingleIngredient, String dgStrength,
            String ddConceptType, String ddDosageForm,
            String ddFederalDeaClassCode, Long ddGcnSeqno,
            String ddHasPackagedDrugs, Long ddDispenseDrugId,
            String ddMultisource, String ddDispenseDrugName,
            String ddObsoleteDate, String ddReplaced, String ddRoute,
            String ddStatusCode, String ddStrength, String ddStrengthUnit,
            String createdBy, Date createdDtm, String lastModifiedBy,
            Date lastModifiedDtm, EplProductDo eplProduct) {
        this.productIdFk = productIdFk;
        this.dgGenericDosageForm = dgGenericDosageForm;
        this.dgGenericDrugName = dgGenericDrugName;
        this.dgHasPackagedDrugs = dgHasPackagedDrugs;
        this.dgGenericDrugId = dgGenericDrugId;
        this.dgRoute = dgRoute;
        this.dgSingleIngredient = dgSingleIngredient;
        this.dgStrength = dgStrength;
        this.ddConceptType = ddConceptType;
        this.ddDosageForm = ddDosageForm;
        this.ddFederalDeaClassCode = ddFederalDeaClassCode;
        this.ddGcnSeqno = ddGcnSeqno;
        this.ddHasPackagedDrugs = ddHasPackagedDrugs;
        this.ddDispenseDrugId = ddDispenseDrugId;
        this.ddMultisource = ddMultisource;
        this.ddDispenseDrugName = ddDispenseDrugName;
        this.ddObsoleteDate = ddObsoleteDate;
        this.ddReplaced = ddReplaced;
        this.ddRoute = ddRoute;
        this.ddStatusCode = ddStatusCode;
        this.ddStrength = ddStrength;
        this.ddStrengthUnit = ddStrengthUnit;
        this.createdBy = createdBy;
        this.createdDtm = createdDtm;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDtm = lastModifiedDtm;
    }

    // Property accessors
    public Long getProductIdFk() {
        return this.productIdFk;
    }

    public void setProductIdFk(Long productIdFk) {
        this.productIdFk = productIdFk;
    }

    public String getDgGenericDosageForm() {
        return this.dgGenericDosageForm;
    }

    public void setDgGenericDosageForm(String dgGenericDosageForm) {
        this.dgGenericDosageForm = dgGenericDosageForm;
    }

    public String getDgGenericDrugName() {
        return this.dgGenericDrugName;
    }

    public void setDgGenericDrugName(String dgGenericDrugName) {
        this.dgGenericDrugName = dgGenericDrugName;
    }

    public String getDgHasPackagedDrugs() {
        return this.dgHasPackagedDrugs;
    }

    public void setDgHasPackagedDrugs(String dgHasPackagedDrugs) {
        this.dgHasPackagedDrugs = dgHasPackagedDrugs;
    }

    public Long getDgGenericDrugId() {
        return this.dgGenericDrugId;
    }

    public void setDgGenericDrugId(Long dgGenericDrugId) {
        this.dgGenericDrugId = dgGenericDrugId;
    }

    public String getDgRoute() {
        return this.dgRoute;
    }

    public void setDgRoute(String dgRoute) {
        this.dgRoute = dgRoute;
    }

    public String getDgSingleIngredient() {
        return this.dgSingleIngredient;
    }

    public void setDgSingleIngredient(String dgSingleIngredient) {
        this.dgSingleIngredient = dgSingleIngredient;
    }

    public String getDgStrength() {
        return this.dgStrength;
    }

    public void setDgStrength(String dgStrength) {
        this.dgStrength = dgStrength;
    }

    public String getDdConceptType() {
        return this.ddConceptType;
    }

    public void setDdConceptType(String ddConceptType) {
        this.ddConceptType = ddConceptType;
    }

    public String getDdDosageForm() {
        return this.ddDosageForm;
    }

    public void setDdDosageForm(String ddDosageForm) {
        this.ddDosageForm = ddDosageForm;
    }

    public String getDdFederalDeaClassCode() {
        return this.ddFederalDeaClassCode;
    }

    public void setDdFederalDeaClassCode(String ddFederalDeaClassCode) {
        this.ddFederalDeaClassCode = ddFederalDeaClassCode;
    }

    public Long getDdGcnSeqno() {
        return this.ddGcnSeqno;
    }

    public void setDdGcnSeqno(Long ddGcnSeqno) {
        this.ddGcnSeqno = ddGcnSeqno;
    }

    public String getDdHasPackagedDrugs() {
        return this.ddHasPackagedDrugs;
    }

    public void setDdHasPackagedDrugs(String ddHasPackagedDrugs) {
        this.ddHasPackagedDrugs = ddHasPackagedDrugs;
    }

    public Long getDdDispenseDrugId() {
        return this.ddDispenseDrugId;
    }

    public void setDdDispenseDrugId(Long ddDispenseDrugId) {
        this.ddDispenseDrugId = ddDispenseDrugId;
    }

    public String getDdMultisource() {
        return this.ddMultisource;
    }

    public void setDdMultisource(String ddMultisource) {
        this.ddMultisource = ddMultisource;
    }

    public String getDdDispenseDrugName() {
        return this.ddDispenseDrugName;
    }

    public void setDdDispenseDrugName(String ddDispenseDrugName) {
        this.ddDispenseDrugName = ddDispenseDrugName;
    }

    public String getDdObsoleteDate() {
        return this.ddObsoleteDate;
    }

    public void setDdObsoleteDate(String ddObsoleteDate) {
        this.ddObsoleteDate = ddObsoleteDate;
    }

    public String getDdReplaced() {
        return this.ddReplaced;
    }

    public void setDdReplaced(String ddReplaced) {
        this.ddReplaced = ddReplaced;
    }

    public String getDdRoute() {
        return this.ddRoute;
    }

    public void setDdRoute(String ddRoute) {
        this.ddRoute = ddRoute;
    }

    public String getDdStatusCode() {
        return this.ddStatusCode;
    }

    public void setDdStatusCode(String ddStatusCode) {
        this.ddStatusCode = ddStatusCode;
    }

    public String getDdStrength() {
        return this.ddStrength;
    }

    public void setDdStrength(String ddStrength) {
        this.ddStrength = ddStrength;
    }

    public String getDdStrengthUnit() {
        return this.ddStrengthUnit;
    }

    public void setDdStrengthUnit(String ddStrengthUnit) {
        this.ddStrengthUnit = ddStrengthUnit;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Override
    public Date getCreatedDtm() {
        return this.createdDtm;
    }

    public void setCreatedDtm(Date createdDtm) {
        this.createdDtm = createdDtm;
    }

    @Override
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    @Override
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    @Override
    public Date getLastModifiedDtm() {
        return this.lastModifiedDtm;
    }

    public void setLastModifiedDtm(Date lastModifiedDtm) {
        this.lastModifiedDtm = lastModifiedDtm;
    }


    /**
     * toString
     * 
     * @return String
     */
    @Override
    public String toString() {
        return "EplFdbProductDo [productIdFk=" + productIdFk + ", dgGenericDosageForm="
                + dgGenericDosageForm + ", dgGenericDrugName="
                + dgGenericDrugName + ", dgHasPackagedDrugs="
                + dgHasPackagedDrugs + ", dgGenericDrugId=" + dgGenericDrugId
                + ", dgRoute=" + dgRoute + ", dgSingleIngredient="
                + dgSingleIngredient + ", dgStrength=" + dgStrength
                + ", ddConceptType=" + ddConceptType + ", ddDosageForm="
                + ddDosageForm + ", ddFederalDeaClassCode="
                + ddFederalDeaClassCode + ", ddGcnSeqno=" + ddGcnSeqno
                + ", ddHasPackagedDrugs=" + ddHasPackagedDrugs
                + ", ddDispenseDrugId=" + ddDispenseDrugId + ", ddMultisource="
                + ddMultisource + ", ddDispenseDrugName=" + ddDispenseDrugName
                + ", ddObsoleteDate=" + ddObsoleteDate + ", ddReplaced="
                + ddReplaced + ", ddRoute=" + ddRoute + ", ddStatusCode="
                + ddStatusCode + ", ddStrength=" + ddStrength
                + ", ddStrengthUnit=" + ddStrengthUnit + ", createdBy="
                + createdBy + ", createdDtm=" + createdDtm
                + ", lastModifiedBy=" + lastModifiedBy + ", lastModifiedDtm="
                + lastModifiedDtm + "]";
    }

    /**
     * hashCode
     * 
     * @return result string represents the hash code
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result
                + ((createdBy == null) ? 0 : createdBy.hashCode());
        result = prime * result
                + ((createdDtm == null) ? 0 : createdDtm.hashCode());
        result = prime * result
                + ((ddConceptType == null) ? 0 : ddConceptType.hashCode());
        result = prime
                * result
                + ((ddDispenseDrugId == null) ? 0 : ddDispenseDrugId.hashCode());
        result = prime
                * result
                + ((ddDispenseDrugName == null) ? 0 : ddDispenseDrugName
                        .hashCode());
        result = prime * result
                + ((ddDosageForm == null) ? 0 : ddDosageForm.hashCode());
        result = prime
                * result
                + ((ddFederalDeaClassCode == null) ? 0 : ddFederalDeaClassCode
                        .hashCode());
        result = prime * result
                + ((ddGcnSeqno == null) ? 0 : ddGcnSeqno.hashCode());
        result = prime
                * result
                + ((ddHasPackagedDrugs == null) ? 0 : ddHasPackagedDrugs
                        .hashCode());
        result = prime * result
                + ((ddMultisource == null) ? 0 : ddMultisource.hashCode());
        result = prime * result
                + ((ddObsoleteDate == null) ? 0 : ddObsoleteDate.hashCode());
        result = prime * result
                + ((ddReplaced == null) ? 0 : ddReplaced.hashCode());
        result = prime * result + ((ddRoute == null) ? 0 : ddRoute.hashCode());
        result = prime * result
                + ((ddStatusCode == null) ? 0 : ddStatusCode.hashCode());
        result = prime * result
                + ((ddStrength == null) ? 0 : ddStrength.hashCode());
        result = prime * result
                + ((ddStrengthUnit == null) ? 0 : ddStrengthUnit.hashCode());
        result = prime
                * result
                + ((dgGenericDosageForm == null) ? 0 : dgGenericDosageForm
                        .hashCode());
        result = prime * result
                + ((dgGenericDrugId == null) ? 0 : dgGenericDrugId.hashCode());
        result = prime
                * result
                + ((dgGenericDrugName == null) ? 0 : dgGenericDrugName
                        .hashCode());
        result = prime
                * result
                + ((dgHasPackagedDrugs == null) ? 0 : dgHasPackagedDrugs
                        .hashCode());
        result = prime * result + ((dgRoute == null) ? 0 : dgRoute.hashCode());
        result = prime
                * result
                + ((dgSingleIngredient == null) ? 0 : dgSingleIngredient
                        .hashCode());
        result = prime * result
                + ((dgStrength == null) ? 0 : dgStrength.hashCode());
        result = prime * result + ((productIdFk == null) ? 0 : productIdFk.hashCode());
        result = prime * result
                + ((lastModifiedBy == null) ? 0 : lastModifiedBy.hashCode());
        result = prime * result
                + ((lastModifiedDtm == null) ? 0 : lastModifiedDtm.hashCode());
        
        return result;
    }

    /**
     * equals
     * 
     * @param obj EplFdbAddDo object
     * @return result returns the hash code results
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        
        if (!super.equals(obj)) {
            return false;
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        EplFdbProductDo other = (EplFdbProductDo) obj;
        
        if (createdBy == null) {
            if (other.createdBy != null) {
                return false;
            }
        } else if (!createdBy.equals(other.createdBy)) {
            return false;
        }
        
        if (createdDtm == null) {
            if (other.createdDtm != null) {
                return false;
            }
        }
        else if (!createdDtm.equals(other.createdDtm)) {
            return false;
        }
        
        if (ddConceptType == null) {
            if (other.ddConceptType != null) {
                return false;
            }
        }
        else if (!ddConceptType.equals(other.ddConceptType)) {
            return false;
        }
        
        if (ddDispenseDrugId == null) {
            if (other.ddDispenseDrugId != null) {
                return false;
            }
        }
        else if (!ddDispenseDrugId.equals(other.ddDispenseDrugId)) {
            return false;
        }
        
        if (ddDispenseDrugName == null) {
            if (other.ddDispenseDrugName != null) {
                return false;
            }
        }
        else if (!ddDispenseDrugName.equals(other.ddDispenseDrugName)) {
            return false;
        }
        
        if (ddDosageForm == null) {
            if (other.ddDosageForm != null) {
                return false;
            }
        }
        else if (!ddDosageForm.equals(other.ddDosageForm)) {
            return false;
        }
        
        if (ddFederalDeaClassCode == null) {
            if (other.ddFederalDeaClassCode != null) {
                return false;
            }
        }
        else if (!ddFederalDeaClassCode.equals(other.ddFederalDeaClassCode)) {
            return false;
        }
        
        if (ddGcnSeqno == null) {
            if (other.ddGcnSeqno != null) {
                return false;
            }
        }
        else if (!ddGcnSeqno.equals(other.ddGcnSeqno)) {
            return false;
        }
        
        if (ddHasPackagedDrugs == null) {
            if (other.ddHasPackagedDrugs != null) {
                return false;
            }
        }
        else if (!ddHasPackagedDrugs.equals(other.ddHasPackagedDrugs)) {
            return false;
        }
        
        if (ddMultisource == null) {
            if (other.ddMultisource != null) {
                return false;
            }
        }
        else if (!ddMultisource.equals(other.ddMultisource)) {
            return false;
        }
        
        if (ddObsoleteDate == null) {
            if (other.ddObsoleteDate != null) {
                return false;
            }
        }
        else if (!ddObsoleteDate.equals(other.ddObsoleteDate)) {
            return false;
        }
        
        if (ddReplaced == null) {
            if (other.ddReplaced != null) {
                return false;
            }
        }
        else if (!ddReplaced.equals(other.ddReplaced)) {
            return false;
        }
        
        if (ddRoute == null) {
            if (other.ddRoute != null) {
                return false;
            }
        }
        else if (!ddRoute.equals(other.ddRoute)) {
            return false;
        }
        
        if (ddStatusCode == null) {
            if (other.ddStatusCode != null) {
                return false;
            }
        }
        else if (!ddStatusCode.equals(other.ddStatusCode)) {
            return false;
        }
        
        if (ddStrength == null) {
            if (other.ddStrength != null) {
                return false;
            }
        }
        else if (!ddStrength.equals(other.ddStrength)) {
            return false;
        }
        
        if (ddStrengthUnit == null) {
            if (other.ddStrengthUnit != null) {
                return false;
            }
        }
        else if (!ddStrengthUnit.equals(other.ddStrengthUnit)) {
            return false;
        }
        
        if (dgGenericDosageForm == null) {
            if (other.dgGenericDosageForm != null) {
                return false;
            }
        }
        else if (!dgGenericDosageForm.equals(other.dgGenericDosageForm)) {
            return false;
        }
        
        if (dgGenericDrugId == null) {
            if (other.dgGenericDrugId != null) {
                return false;
            }
        }
        else if (!dgGenericDrugId.equals(other.dgGenericDrugId)) {
            return false;
        }
        
        if (dgGenericDrugName == null) {
            if (other.dgGenericDrugName != null) {
                return false;
            }
        }
        else if (!dgGenericDrugName.equals(other.dgGenericDrugName)) {
            return false;
        }
        
        if (dgHasPackagedDrugs == null) {
            if (other.dgHasPackagedDrugs != null) {
                return false;
            }
        }
        else if (!dgHasPackagedDrugs.equals(other.dgHasPackagedDrugs)) {
            return false;
        }
        
        if (dgRoute == null) {
            if (other.dgRoute != null) {
                return false;
            }
        }
        else if (!dgRoute.equals(other.dgRoute)) {
            return false;
        }
        
        if (dgSingleIngredient == null) {
            if (other.dgSingleIngredient != null) {
                return false;
            }
        }
        else if (!dgSingleIngredient.equals(other.dgSingleIngredient)) {
            return false;
        }
        
        if (dgStrength == null) {
            if (other.dgStrength != null) {
                return false;
            }
        }
        else if (!dgStrength.equals(other.dgStrength)) {
            return false;
        }
        
        if (productIdFk == null) {
            if (other.productIdFk != null) {
                return false;
            }
        }
        else if (!productIdFk.equals(other.productIdFk)) {
            return false;
        }
        
        if (lastModifiedBy == null) {
            if (other.lastModifiedBy != null) {
                return false;
            }
        }
        else if (!lastModifiedBy.equals(other.lastModifiedBy)) {
            return false;
        }
        
        if (lastModifiedDtm == null) {
            if (other.lastModifiedDtm != null) {
                return false;
            }
        }
        else if (!lastModifiedDtm.equals(other.lastModifiedDtm)) {
            return false;
        }
        
        return true;
    }

}

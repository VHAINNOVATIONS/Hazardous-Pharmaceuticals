/**
 * Source file created in 2006 by Southwest Research Institute
 * 
 * Generated Jun 25, 2008 3:54:29 PM by Hibernate Tools 3.2.0.beta8
 */


package gov.va.med.pharmacy.peps.domain.common.model;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;


/**
 * EplProductDo generated by hbm2java
 * 
 * @hibernate.class
 */
public class EplProductDo extends gov.va.med.pharmacy.peps.domain.common.model.DataObject implements java.io.Serializable {

    // Fields
    public static final String EPL_ID = "eplId";
    public static final String VA_PRODUCT_NAME = "vaProductName";
    public static final String ITEM_STATUS = "itemStatus";
    public static final String LOCAL_USE = "localUse";
    public static final String PROD_INGREDIENT_ASSOCS = "eplProdIngredientAssocs";
    public static final String PROD_DRUG_TEXT_LOCAL_ASSOCS = "eplProdDrugTextLAssocs";
    public static final String PROD_DRUG_TEXT_NATIONAL_ASSOCS = "eplProdDrugTextNAssocs";
    public static final String REQUEST_STATUS = "requestStatus";
    public static final String VA_GEN_NAME = "eplVaGenName";
    public static final String SYNONYM_NAMES = "eplSynonyms";
    public static final String VA_DISPENSE_UNIT = "eplVaDispenseUnit";
    public static final String PROD_DRUG_CLASS_ASSOCS = "eplProdDrugClassAssocs";
    public static final String NDC_BY_OUTPATIENT_SITE_ASSOCS = "eplNdcByOutpatientSiteNdcs";
    public static final String EPL_VA_DF_OWNERS = "eplVadfOwners";
    public static final String EPL_ORDERABLE_ITEM = "eplOrderableItem";
    public static final String EPL_ORDERABLE_ITEM_EPL_ID = "eplOrderableItem.eplId";
    public static final String EPL_ORDER_UNIT = "eplOrderUnit";
    public static final String EPL_PROD_SPEC_HANDLING_ASSOCS = "eplProdSpecHandlingAssocs";
    public static final String VA_PRINT_NAME = "vaPrintName";
    public static final String LOCAL_PRINT_NAME = "localPrintName";
    public static final String VUID = "vuid";
    public static final String MASTER_ENTRY_FOR_VUID = "masterEntryForVuid";
    public static final String IEN = "ien";
    public static final String REQUEST_REJECT_REASON = "requestRejectReason";
    public static final String SPECIMEN_TYPE = "specimenType";
    public static final String TALLMAN_LETTERING = "tallmanLettering";
    public static final String GCN_SEQ_NUMBER = "gcnSeqno";
    public static final String STRENGTH = "strength";
    public static final String DRUG_UNIT = "eplDrugUnit";
    public static final String CMOP_ID = "cmopId";
    public static final String CMOP_DISPENSE = "cmopDispenseYn";
    public static final String NATIONAL_FORMULARY_NAME = "nationalFormularyName";
    public static final String NATIONAL_FORMULARY_INDICATORY = "nationalFormularyIndicator";
    public static final String NATIONAL_FORMULARY_RESTRICTION = "nationalFormularyRestriction";
    public static final String NATIONAL_WARNING_LABEL_LIST_ASSOCS = "eplProdWarnLabelNAssocs";
    public static final String MAX_DOSE_PER_DAY = "maxDosePerDay";
    public static final String CODE = "code";

    public static final String IFCAP_ITEM_NUMBER = "eplIfcapItemNumbers";
    public static final String ATC_CANISTERS = "eplAtcCanisters";
    public static final String ONE_ATC_CANISTER = "oneAtcCanister";
    public static final String INPATIENT_PHARM_LOCATIONS = "eplInpatientPharmLocations";
    public static final String NATIONAL_POSSIBLE_DOSAGES = "eplNationalPossibleDosages";
    public static final String CS_FED_SCHEDULES = "eplCsFedSchedule";
    public static final String LOCAL_POSSIBLE_DOSAGE = "eplLocalPossibleDosages";
    public static final String LOCAL_WARNING_LABEL_LIST_ASSOCS = "eplProdWarnLabelLAssocs";
    public static final String REJECT_REASON_TEXT = "rejectReasonText";
    public static final String NEW_WARNING_LABEL_LIST_WARN = "newWarningLabelListWarn";
    public static final String SINGLE_MULTI_SOURCE_PRODUCT = "singleMultiSourceProduct";
    public static final String ATC_CHOICE = "atcChoice";
    public static final String ATC_MNEMONIC = "atcMnemonic";
    public static final String LABS_ORDER_ENTRY = "labTestMonitor";
    public static final String LAB_TEST_MONITOR = "labTestMonitor";
    public static final String PROD_LABS_ASSOC = "eplProductLabs";
    public static final String INACTIVATION_DATE = "inactivationDate";
    public static final String REVISION_NUMBER = "revisionNumber";
    public static final String OVERRIDE_DF_DOSE_CHK_EXCLUSN = "overrideDfDoseChkExclusn";
    public static final String PREVIOUSLY_MARKED_FOR_LOCAL_USE = "prevMarkedForLocalUseYn";
    public static final String PRODUCT_DISPENSE_UNITS_PER_ORD = "productDispenseUnitsPerOrd";
    public static final String CREATE_POSSIBLE_DOSAGE = "createPossibleDosage";
    public static final String EXCLUDE_INTERACTION_CHECK = "excludeInteractionCheck";
    public static final String NDF_PRODUCT_IEN = "ndfProductIen";
    public static final String POSSIBLE_DOSAGES_TO_CREATE = "possibleDosagesToCreate";
    public static final String PRODUCT_PACKAGE = "productPackage";
    public static final String SERVICE_CODE = "serviceCode";
    public static final String FDA_MED_GUIDE = "fdaMedGuide";
    public static final String MEDICATION = "catMedicFlag";
    public static final String INVESTIGATIONAL = "catInvestFlag";
    public static final String COMPOUND = "catCompoundFlag";
    public static final String SUPPLY = "catSupplyFlag";
    public static final String HERBAL = "subcatHerbalFlag";
    public static final String CHEMOTHERAPY = "subcatChemoFlag";
    public static final String OTC = "subcatOtcFlag";
    public static final String VETERINARY = "subcatVeterFlag";

    private static final long serialVersionUID = 1L;

    private Long eplId;
    private String vuid;
    private String productNdc;
    private String masterEntryForVuid;
    private String requestStatus;
    private String itemStatus;
    private String rejectReasonText;
    private String requestRejectReason;
    private Long revisionNumber;
    private String vaProductName;
    private String localUse;
    private Long gcnSeqno;
    private String singleMultiSourceProduct;
    private String nationalFormularyName;
    private Short maxDosePerDay;
    private String newWarningLabelListWarn;
    private String tallmanLettering;
    private Long productDispenseUnitsPerOrd;
    private String nationalFormularyIndicator;
    private String vaPrintName;
    private String strength;
    private String cmopId;
    private String specimenType;
    private Date inactivationDate;
    private String labTestMonitor;
    private Long ien;
    private String overrideDfDoseChkExclusn;
    private String localPrintName;
    private String localSpecialHandling;
    private String atcMnemonic;
    private String atcChoice;
    private Long oneAtcCanister;
    private String cmopDispenseYn;
    private String prevMarkedForLocalUseYn;
    private String createPossibleDosage;
    private String excludeInteractionCheck;
    private String fdaMedGuide;
    private Long ndfProductIen;
    private String possibleDosagesToCreate;
    private String productPackage;
    private Long serviceCode;
    private String catMedicFlag;
    private String catInvestFlag;
    private String catCompoundFlag;
    private String catSupplyFlag;
    private String subcatHerbalFlag;
    private String subcatChemoFlag;
    private String subcatOtcFlag;
    private String subcatVeterFlag;
    private EplVaGenNameDo eplVaGenName;
    private EplOrderUnitDo eplOrderUnit;
    private Set<EplProdWarnLabelNAssocDo> eplProdWarnLabelNAssocs = new HashSet<EplProdWarnLabelNAssocDo>(0);
    
    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
    private Set<EplProdIngredientAssocDo> eplProdIngredientAssocs = new HashSet<EplProdIngredientAssocDo>(0);
    
    private Set<EplProdSpecHandlingAssocDo> eplProdSpecHandlingAssocs = new HashSet<EplProdSpecHandlingAssocDo>(0);
    private Set<EplProductLabDo> eplProductLabs = new HashSet<EplProductLabDo>(0);
    private Set<EplNdcDo> eplNdcs = new HashSet<EplNdcDo>(0);
    private Set<EplRequestDo> eplRequests = new HashSet<EplRequestDo>(0);
    private Set<EplAtcCanisterDo> eplAtcCanisters = new HashSet<EplAtcCanisterDo>(0);
    private Set<EplIfcapItemNumberDo> eplIfcapItemNumbers = new HashSet<EplIfcapItemNumberDo>(0);
    private Set<EplProdDrugTextNAssocDo> eplProdDrugTextNAssocs = new HashSet<EplProdDrugTextNAssocDo>(0);
    private Set<EplSynonymDo> eplSynonyms = new HashSet<EplSynonymDo>(0);
    private Set<EplProdDrugClassAssocDo> eplProdDrugClassAssocs = new HashSet<EplProdDrugClassAssocDo>(0);
    private Set<EplProdDrugTextLAssocDo> eplProdDrugTextLAssocs = new HashSet<EplProdDrugTextLAssocDo>(0);
    private Set<EplProductVitalDo> eplProductVitals = new HashSet<EplProductVitalDo>(0);
    private Set<EplNationalPossibleDosageDo> eplNationalPossibleDosages = new HashSet<EplNationalPossibleDosageDo>(0);
    private Set<EplVadfOwnerDo> eplVadfOwners = new HashSet<EplVadfOwnerDo>(0);
    private Set<EplNdcByOutpatientSiteNdcDo> eplNdcByOutpatientSiteNdcs = new HashSet<EplNdcByOutpatientSiteNdcDo>(0);
    private Set<EplPartialSaveMgtDo> eplPartialSaveMgts = new HashSet<EplPartialSaveMgtDo>(0);
    private Set<EplLocalPossibleDosageDo> eplLocalPossibleDosages = new HashSet<EplLocalPossibleDosageDo>(0);
    private Set<EplProdWarnLabelLAssocDo> eplProdWarnLabelLAssocs = new HashSet<EplProdWarnLabelLAssocDo>(0);
    private EplDoseUnitDo eplDoseUnit;
    private EplDrugUnitDo eplDrugUnit;
    private EplOrderableItemDo eplOrderableItem;
    private EplCsFedScheduleDo eplCsFedSchedule;
    private EplVaDispenseUnitDo eplVaDispenseUnit;
    private Set<EplReducedCopayDo> eplReducedCopay = new HashSet<EplReducedCopayDo>(0);

    // Constructors

    /** default constructor */

    public EplProductDo() {
    }

    /** minimal constructor */

    public EplProductDo(Long eplId, String vuid, String masterEntryForVuid, String requestStatus, String itemStatus,
                        Long revisionNumber, String vaProductName, String localUse, String singleMultiSourceProduct,
                        String vaPrintName, String cmopId, String cmopDispenseYn, String prevMarkedForLocalUseYn,
                        String excludeInteractionCheck, Long ndfProductIen,
                        String possibleDosagesToCreate) {
        this.eplId = eplId;
        this.vuid = vuid;
        this.masterEntryForVuid = masterEntryForVuid;
        this.requestStatus = requestStatus;
        this.itemStatus = itemStatus;
        this.revisionNumber = revisionNumber;
        this.vaProductName = vaProductName;
        this.localUse = localUse;
        this.singleMultiSourceProduct = singleMultiSourceProduct;
        this.vaPrintName = vaPrintName;
        this.cmopDispenseYn = cmopDispenseYn;
        this.prevMarkedForLocalUseYn = prevMarkedForLocalUseYn;
        this.excludeInteractionCheck = excludeInteractionCheck;
        this.ndfProductIen = ndfProductIen;
        this.possibleDosagesToCreate = possibleDosagesToCreate;
        this.cmopId = cmopId;

    }

    /** full constructor */

    public EplProductDo(Long eplId, String vuid, String masterEntryForVuid, String requestStatus, String itemStatus,
                        String rejectReasonText, String requestRejectReason, Long revisionNumber, String vaProductName,
                        String localUse, Long gcnSeqno, String singleMultiSourceProduct, String nationalFormularyName,
                        Short maxDosePerDay, String newWarningLabelListWarn, String tallmanLettering,
                        Long productDispenseUnitsPerOrd, String nationalFormularyIndicator,
                        String vaPrintName, String strength, String cmopId, String specimenType, Date inactivationDate,
                        String labTestMonitor, Long ien, String overrideDfDoseChkExclusn, String localPrintName,
                        String cmopDispenseYn, String prevMarkedForLocalUseYn, String createPossibleDosage,
                        String excludeInteractionCheck, String fdaMedGuide, Long ndfProductIen, String possibleDosagesToCreate,
                        String productPackage, Long serviceCode, String localSpecialHandling, String atcMnemonic,
                        String atcChoice, Long oneAtcCanister, EplCsFedScheduleDo eplCsFedSchedule, EplDoseUnitDo eplDoseUnit,
                        EplDrugUnitDo eplDrugUnit, EplOrderableItemDo eplOrderableItem, EplOrderUnitDo eplOrderUnit,
                        EplVaGenNameDo eplVaGenName, Set<EplNationalPossibleDosageDo> eplNationalPossibleDosages,
                        Set<EplVadfOwnerDo> eplVadfOwners, Set<EplProductLabDo> eplProductLabs, Set<EplRequestDo> eplRequests,
                        Set<EplIfcapItemNumberDo> eplIfcapItemNumbers, Set<EplProdIngredientAssocDo> eplProdIngredientAssocs,
                        Set<EplProdSpecHandlingAssocDo> eplProdSpecHandlingAssocs,
                        Set<EplProdDrugTextLAssocDo> eplProdDrugTextLAssocs,
                        Set<EplProdDrugTextNAssocDo> eplProdDrugTextNAssocs,
                        Set<EplProdDrugClassAssocDo> eplProdDrugClassAssocs,
                        Set<EplLocalPossibleDosageDo> eplLocalPossibleDosages, Set<EplSynonymDo> eplSynonyms,
                        Set<EplProdWarnLabelLAssocDo> eplProdWarnLabelLAssocs,
                        Set<EplProdWarnLabelNAssocDo> eplProdWarnLabelNAssocs,
                        Set<EplNdcByOutpatientSiteNdcDo> eplNdcByOutpatientSiteNdcs, Set<EplAtcCanisterDo> eplAtcCanisters,
                        Set<EplNdcDo> eplNdcs, Set<EplPartialSaveMgtDo> eplPartialSaveMgts,
                        Set<EplProductVitalDo> eplProductVitals, EplVaDispenseUnitDo eplVaDispenseUnit,
//                        Set<EplCategoriesDo> eplCategories,
                        String catMedicFlag,
                        String catInvestFlag,
                        String catCompoundFlag,
                        String catSupplyFlag,
                        String subcatHerbalFlag,
                        String subcatChemoFlag,
                        String subcatOtcFlag,
                        String subcatVeterFlag,
                        Set<EplReducedCopayDo> eplReducedCopay) {
        this.eplId = eplId;
        this.vuid = vuid;
        this.masterEntryForVuid = masterEntryForVuid;
        this.catMedicFlag = catMedicFlag;
        this.catInvestFlag = catInvestFlag;
        this.catCompoundFlag = catCompoundFlag;
        this.catSupplyFlag = catSupplyFlag;
        this.subcatHerbalFlag = subcatHerbalFlag;
        this.subcatChemoFlag = subcatChemoFlag;
        this.subcatOtcFlag = subcatOtcFlag;
        this.subcatVeterFlag = subcatVeterFlag;
        this.requestStatus = requestStatus;
        this.itemStatus = itemStatus;
        this.rejectReasonText = rejectReasonText;
        this.requestRejectReason = requestRejectReason;
        this.revisionNumber = revisionNumber;
        this.vaProductName = vaProductName;
        this.localUse = localUse;
        this.gcnSeqno = gcnSeqno;
        this.singleMultiSourceProduct = singleMultiSourceProduct;
        this.nationalFormularyName = nationalFormularyName;
        this.maxDosePerDay = maxDosePerDay;
        this.newWarningLabelListWarn = newWarningLabelListWarn;
        this.tallmanLettering = tallmanLettering;
        this.productDispenseUnitsPerOrd = productDispenseUnitsPerOrd;
        this.nationalFormularyIndicator = nationalFormularyIndicator;
        this.vaPrintName = vaPrintName;
        this.strength = strength;
        this.cmopId = cmopId;
        this.specimenType = specimenType;
        this.inactivationDate = inactivationDate;
        this.labTestMonitor = labTestMonitor;
        this.ien = ien;
        this.overrideDfDoseChkExclusn = overrideDfDoseChkExclusn;
        this.localPrintName = localPrintName;
        this.localSpecialHandling = localSpecialHandling;
        this.atcMnemonic = atcMnemonic;
        this.atcChoice = atcChoice;
        this.oneAtcCanister = oneAtcCanister;
        this.cmopDispenseYn = cmopDispenseYn;
        this.prevMarkedForLocalUseYn = prevMarkedForLocalUseYn;
        this.createPossibleDosage = createPossibleDosage;
        this.excludeInteractionCheck = excludeInteractionCheck;
        this.fdaMedGuide = fdaMedGuide;
        this.ndfProductIen = ndfProductIen;
        this.possibleDosagesToCreate = possibleDosagesToCreate;
        this.productPackage = productPackage;
        this.serviceCode = serviceCode;
        this.eplVaGenName = eplVaGenName;
        this.eplOrderUnit = eplOrderUnit;
        this.eplProdWarnLabelLAssocs = eplProdWarnLabelLAssocs;
        this.eplProdIngredientAssocs = eplProdIngredientAssocs;
        this.eplProdSpecHandlingAssocs = eplProdSpecHandlingAssocs;
        this.eplProductLabs = eplProductLabs;
        this.eplNdcs = eplNdcs;
        this.eplRequests = eplRequests;
        this.eplAtcCanisters = eplAtcCanisters;
        this.eplIfcapItemNumbers = eplIfcapItemNumbers;
        this.eplProdDrugTextNAssocs = eplProdDrugTextNAssocs;
        this.eplSynonyms = eplSynonyms;
        this.eplProdDrugClassAssocs = eplProdDrugClassAssocs;
        this.eplProdDrugTextLAssocs = eplProdDrugTextLAssocs;
        this.eplProductVitals = eplProductVitals;
        this.eplNationalPossibleDosages = eplNationalPossibleDosages;
        this.eplNdcByOutpatientSiteNdcs = eplNdcByOutpatientSiteNdcs;
        this.eplPartialSaveMgts = eplPartialSaveMgts;
        this.eplLocalPossibleDosages = eplLocalPossibleDosages;
        this.eplProdWarnLabelNAssocs = eplProdWarnLabelNAssocs;
        this.eplVadfOwners = eplVadfOwners;
        this.eplDoseUnit = eplDoseUnit;
        this.eplDrugUnit = eplDrugUnit;
        this.eplOrderableItem = eplOrderableItem;
        this.eplCsFedSchedule = eplCsFedSchedule;
        this.eplVaDispenseUnit = eplVaDispenseUnit;
        this.eplReducedCopay = eplReducedCopay;
    }

    public void setProductNdc(String productNdc) {
        this.productNdc = productNdc;
    }
    
    public String getProductNdc() {
        return productNdc;
    }
    
    // Property accessors
    /**
     * getcatMedicFlag
     * 
     * @return catMedicFlag category
     */
    public String getCatMedicFlag() {
        
        return catMedicFlag;
    }
    
    /**
     * setCatMedicFlag
     * 
     * @param medication category
     */
    public void setCatMedicFlag(String catMedicFlag) {
    
        this.catMedicFlag = catMedicFlag;
    }
    
    /**
     * getCatInvestFlag
     * 
     * @return catInvestFlag
     */
    public String getCatInvestFlag() {
    
        return catInvestFlag;
    }
    
    /**
     * setInvestigational
     * 
     * @param investigational category
     */
    public void setCatInvestFlag(String catInvestFlag) {
    
        this.catInvestFlag = catInvestFlag;
    }
    
    /**
     * getCatCompoundFlag
     * 
     * @return catCompoundFlag
     */
    public String getCatCompoundFlag() {
    
        return catCompoundFlag;
    }
    
    /**
     * setCatCompoundFlag
     * 
     * @param catCompoundFlag category
     */
    public void setCatCompoundFlag(String catCompoundFlag) {
    
        this.catCompoundFlag = catCompoundFlag;
    }

    /**
     * getCatSupplyFlag
     * 
     * @return supply
     */
    public String getCatSupplyFlag() {
    
        return catSupplyFlag;
    }

    /**
     * setCatSupplyFlag
     * 
     * @param supply category
     */
    public void setCatSupplyFlag(String catSupplyFlag) {
    
        this.catSupplyFlag = catSupplyFlag;
    }

    /**
     * getSubcatHerbalFlag
     * 
     * @return subcatHerbalFlag
     */
    public String getSubcatHerbalFlag() {
    
        return subcatHerbalFlag;
    }

    /**
     * setSubcatHerbalFlag
     * 
     * @param herbal subcatHerbalFlag
     */
    public void setSubcatHerbalFlag(String subcatHerbalFlag) {
    
        this.subcatHerbalFlag = subcatHerbalFlag;
    }

    /**
     * getSubcatChemoFlag
     * 
     * @return subcatChemoFlag
     */
    public String getSubcatChemoFlag() {
    
        return subcatChemoFlag;
    }

    /**
     * setSubcatChemoFlag
     * 
     * @param subcatChemoFlag subcategory
     */
    public void setSubcatChemoFlag(String subcatChemoFlag) {
    
        this.subcatChemoFlag = subcatChemoFlag;
    }

    /**
     * getSubcatOtcFlag
     * 
     * @return subcatOtcFlag
     */
    public String getSubcatOtcFlag() {
    
        return subcatOtcFlag;
    }

    /**
     * setSubcatOtcFlag
     * 
     * @param subcatOtcFlag subcategory
     */
    public void setSubcatOtcFlag(String subcatOtcFlag) {
    
        this.subcatOtcFlag = subcatOtcFlag;
    }

    /**
     * getSubcatVeterFlag
     * 
     * @return subcatVeterFlag
     */
    public String getSubcatVeterFlag() {
    
        return subcatVeterFlag;
    }

    /**
     * setSubcatVeterFlag
     * 
     * @param subcatVeterFlag subcategory
     */
    public void setSubcatVeterFlag(String subcatVeterFlag) {
    
        this.subcatVeterFlag = subcatVeterFlag;
    }

    public Long getEplId() {
        return this.eplId;
    }

    public String getMasterEntryForVuid() {
        return masterEntryForVuid;
    }

    public void setMasterEntryForVuid(String masterEntryForVuid) {
        this.masterEntryForVuid = masterEntryForVuid;
    }

    public Long getProductDispenseUnitsPerOrd() {
        return productDispenseUnitsPerOrd;
    }

    public void setProductDispenseUnitsPerOrd(Long productDispenseUnitsPerOrd) {
        this.productDispenseUnitsPerOrd = productDispenseUnitsPerOrd;
    }

    public String getCreatePossibleDosage() {
        return this.createPossibleDosage;
    }

    public void setCreatePossibleDosage(String createPossibleDosage) {
        this.createPossibleDosage = createPossibleDosage;
    }

    public String getExcludeInteractionCheck() {
        return excludeInteractionCheck;
    }

    public void setExcludeInteractionCheck(String excludeInteractionCheck) {
        this.excludeInteractionCheck = excludeInteractionCheck;
    }

    public String getFdaMedGuide() {
        return this.fdaMedGuide;
    }

    public void setFdaMedGuide(String fdaMedGuide) {
        this.fdaMedGuide = fdaMedGuide;
    }

    public Long getNdfProductIen() {
        return ndfProductIen;
    }

    public void setNdfProductIen(Long ndfProductIen) {
        this.ndfProductIen = ndfProductIen;
    }

    public String getPossibleDosagesToCreate() {
        return possibleDosagesToCreate;
    }

    public void setPossibleDosagesToCreate(String possibleDosagesToCreate) {
        this.possibleDosagesToCreate = possibleDosagesToCreate;
    }

    public String getProductPackage() {
        return productPackage;
    }

    public void setProductPackage(String productPackage) {
        this.productPackage = productPackage;
    }

    public Long getServiceCode() {
        return serviceCode;
    }

    public void setServiceCode(Long serviceCode) {
        this.serviceCode = serviceCode;
    }

    public void setEplId(Long eplId) {
        this.eplId = eplId;
    }

    public String getVuid() {
        return this.vuid;
    }

    public void setVuid(String vuid) {
        this.vuid = vuid;
    }

    public String getRequestStatus() {
        return this.requestStatus;
    }

    public void setRequestStatus(String requestStatus) {
        this.requestStatus = requestStatus;
    }

    public String getItemStatus() {
        return this.itemStatus;
    }

    public void setItemStatus(String itemStatus) {
        this.itemStatus = itemStatus;
    }

    public String getRejectReasonText() {
        return this.rejectReasonText;
    }

    public void setRejectReasonText(String rejectReasonText) {
        this.rejectReasonText = rejectReasonText;
    }

    public String getRequestRejectReason() {
        return this.requestRejectReason;
    }

    public void setRequestRejectReason(String requestRejectReason) {
        this.requestRejectReason = requestRejectReason;
    }

    public Long getRevisionNumber() {
        return this.revisionNumber;
    }

    public void setRevisionNumber(Long revisionNumber) {
        this.revisionNumber = revisionNumber;
    }

    public String getVaProductName() {
        return this.vaProductName;
    }

    public void setVaProductName(String vaProductName) {
        this.vaProductName = vaProductName;
    }

    public String getLocalUse() {
        return this.localUse;
    }

    public void setLocalUse(String localUse) {
        this.localUse = localUse;
    }

    public Long getGcnSeqno() {
        return this.gcnSeqno;
    }

    public void setGcnSeqno(Long gcnSeqno) {
        this.gcnSeqno = gcnSeqno;
    }

    public String getSingleMultiSourceProduct() {
        return this.singleMultiSourceProduct;
    }

    public void setSingleMultiSourceProduct(String singleMultiSourceProduct) {
        this.singleMultiSourceProduct = singleMultiSourceProduct;
    }

    public String getNationalFormularyName() {
        return this.nationalFormularyName;
    }

    public void setNationalFormularyName(String nationalFormularyName) {
        this.nationalFormularyName = nationalFormularyName;
    }

    public Short getMaxDosePerDay() {
        return this.maxDosePerDay;
    }

    public void setMaxDosePerDay(Short maxDosePerDay) {
        this.maxDosePerDay = maxDosePerDay;
    }

    public String getNewWarningLabelListWarn() {
        return this.newWarningLabelListWarn;
    }

    public void setNewWarningLabelListWarn(String newWarningLabelListWarn) {
        this.newWarningLabelListWarn = newWarningLabelListWarn;
    }

    public String getTallmanLettering() {
        return this.tallmanLettering;
    }

    public void setTallmanLettering(String tallmanLettering) {
        this.tallmanLettering = tallmanLettering;
    }

    public String getNationalFormularyIndicator() {
        return this.nationalFormularyIndicator;
    }

    public void setNationalFormularyIndicator(String nationalFormularyIndicator) {
        this.nationalFormularyIndicator = nationalFormularyIndicator;
    }

    public String getVaPrintName() {
        return this.vaPrintName;
    }

    public void setVaPrintName(String vaPrintName) {
        this.vaPrintName = vaPrintName;
    }

    public String getStrength() {
        return this.strength;
    }

    public void setStrength(String strength) {
        this.strength = strength;
    }

    public String getCmopId() {
        return this.cmopId;
    }

    public void setCmopId(String cmopId) {
        this.cmopId = cmopId;
    }

    public String getPrevMarkedForLocalUseYn() {
        return this.prevMarkedForLocalUseYn;
    }

    public void setPrevMarkedForLocalUseYn(String prevMarkedForLocalUseYn) {
        this.prevMarkedForLocalUseYn = prevMarkedForLocalUseYn;
    }

    public String getSpecimenType() {
        return this.specimenType;
    }

    public void setSpecimenType(String specimenType) {
        this.specimenType = specimenType;
    }

    public Date getInactivationDate() {
        return this.inactivationDate;
    }

    public void setInactivationDate(Date inactivationDate) {
        this.inactivationDate = inactivationDate;
    }

    public String getLabTestMonitor() {
        return this.labTestMonitor;
    }

    public void setLabTestMonitor(String labTestMonitor) {
        this.labTestMonitor = labTestMonitor;
    }

    public Long getIen() {
        return this.ien;
    }

    public void setIen(Long ien) {
        this.ien = ien;
    }

    public String getOverrideDfDoseChkExclusn() {
        return this.overrideDfDoseChkExclusn;
    }

    public void setOverrideDfDoseChkExclusn(String overrideDfDoseChkExclusn) {
        this.overrideDfDoseChkExclusn = overrideDfDoseChkExclusn;
    }

    public String getLocalPrintName() {
        return this.localPrintName;
    }

    public void setLocalPrintName(String localPrintName) {
        this.localPrintName = localPrintName;
    }

    public String getLocalSpecialHandling() {
        return this.localSpecialHandling;
    }

    public void setLocalSpecialHandling(String localSpecialHandling) {
        this.localSpecialHandling = localSpecialHandling;
    }

    public String getAtcMnemonic() {
        return this.atcMnemonic;
    }

    public void setAtcMnemonic(String atcMnemonic) {
        this.atcMnemonic = atcMnemonic;
    }

    public String getAtcChoice() {
        return this.atcChoice;
    }

    public void setAtcChoice(String atcChoice) {
        this.atcChoice = atcChoice;
    }

    public String getCmopDispenseYn() {
        return this.cmopDispenseYn;
    }

    public Long getOneAtcCanister() {
        return this.oneAtcCanister;
    }

    public void setOneAtcCanister(Long oneAtcCanister) {
        this.oneAtcCanister = oneAtcCanister;
    }

    public EplCsFedScheduleDo getEplCsFedSchedule() {
        return this.eplCsFedSchedule;
    }

    public void setEplCsFedSchedule(EplCsFedScheduleDo eplCsFedSchedule) {
        this.eplCsFedSchedule = eplCsFedSchedule;
    }

    public EplDoseUnitDo getEplDoseUnit() {
        return this.eplDoseUnit;
    }

    public void setEplDoseUnit(EplDoseUnitDo eplDoseUnit) {
        this.eplDoseUnit = eplDoseUnit;
    }

    public EplDrugUnitDo getEplDrugUnit() {
        return this.eplDrugUnit;
    }

    /**
     * setEplDrugUnit
     * @param eplDrugUnite plDrugUnit
     */
    public void setEplDrugUnit(EplDrugUnitDo eplDrugUnit) {
        this.eplDrugUnit = eplDrugUnit;
    }

    public EplOrderableItemDo getEplOrderableItem() {
        return this.eplOrderableItem;
    }

    public void setEplOrderableItem(EplOrderableItemDo eplOrderableItem) {
        this.eplOrderableItem = eplOrderableItem;
    }

    public EplOrderUnitDo getEplOrderUnit() {
        return this.eplOrderUnit;
    }

    public void setEplOrderUnit(EplOrderUnitDo eplOrderUnit) {
        this.eplOrderUnit = eplOrderUnit;
    }

    public EplVaGenNameDo getEplVaGenName() {
        return this.eplVaGenName;
    }

    public void setEplVaGenName(EplVaGenNameDo eplVaGenName) {
        this.eplVaGenName = eplVaGenName;
    }

    public Set<EplNationalPossibleDosageDo> getEplNationalPossibleDosages() {
        return this.eplNationalPossibleDosages;
    }

    public void setEplNationalPossibleDosages(Set<EplNationalPossibleDosageDo> eplNationalPossibleDosages) {
        this.eplNationalPossibleDosages = eplNationalPossibleDosages;
    }

    @Override
    public Set<EplVadfOwnerDo> getEplVadfOwners() {
        return this.eplVadfOwners;
    }

    public void setEplVadfOwners(Set<EplVadfOwnerDo> eplVadfOwners) {
        this.eplVadfOwners = eplVadfOwners;
    }

    public Set<EplProductLabDo> getEplProductLabs() {
        return this.eplProductLabs;
    }

    public void setEplProductLabs(Set<EplProductLabDo> eplProductLabs) {
        this.eplProductLabs = eplProductLabs;
    }

    public Set<EplRequestDo> getEplRequests() {
        return this.eplRequests;
    }

    public void setEplRequests(Set<EplRequestDo> eplRequests) {
        this.eplRequests = eplRequests;
    }

    public Set<EplIfcapItemNumberDo> getEplIfcapItemNumbers() {
        return this.eplIfcapItemNumbers;
    }

    public void setEplIfcapItemNumbers(Set<EplIfcapItemNumberDo> eplIfcapItemNumbers) {
        this.eplIfcapItemNumbers = eplIfcapItemNumbers;
    }

    public Set<EplProdIngredientAssocDo> getEplProdIngredientAssocs() {
        return this.eplProdIngredientAssocs;
    }

    public void setEplProdIngredientAssocs(Set<EplProdIngredientAssocDo> eplProdIngredientAssocs) {
        this.eplProdIngredientAssocs = eplProdIngredientAssocs;
    }

    public Set<EplProdDrugTextLAssocDo> getEplProdDrugTextLAssocs() {
        return this.eplProdDrugTextLAssocs;
    }

    public void setEplProdDrugTextLAssocs(Set<EplProdDrugTextLAssocDo> eplProdDrugTextLAssocs) {
        this.eplProdDrugTextLAssocs = eplProdDrugTextLAssocs;
    }

    public Set<EplProdDrugClassAssocDo> getEplProdDrugClassAssocs() {
        return this.eplProdDrugClassAssocs;
    }

    public void setEplProdDrugClassAssocs(Set<EplProdDrugClassAssocDo> eplProdDrugClassAssocs) {
        this.eplProdDrugClassAssocs = eplProdDrugClassAssocs;
    }

    public Set<EplLocalPossibleDosageDo> getEplLocalPossibleDosages() {
        return this.eplLocalPossibleDosages;
    }

    public void setEplLocalPossibleDosages(Set<EplLocalPossibleDosageDo> eplLocalPossibleDosages) {
        this.eplLocalPossibleDosages = eplLocalPossibleDosages;
    }

    public Set<EplSynonymDo> getEplSynonyms() {
        return this.eplSynonyms;
    }

    public void setEplSynonyms(Set<EplSynonymDo> eplSynonyms) {
        this.eplSynonyms = eplSynonyms;
    }

    public Set<EplProdWarnLabelLAssocDo> getEplProdWarnLabelLAssocs() {
        return this.eplProdWarnLabelLAssocs;
    }

    public void setEplProdWarnLabelLAssocs(Set<EplProdWarnLabelLAssocDo> eplProdWarnLabelLAssocs) {
        this.eplProdWarnLabelLAssocs = eplProdWarnLabelLAssocs;
    }

    public Set<EplProdWarnLabelNAssocDo> getEplProdWarnLabelNAssocs() {
        return this.eplProdWarnLabelNAssocs;
    }

    public void setEplProdWarnLabelNAssocs(Set<EplProdWarnLabelNAssocDo> eplProdWarnLabelNAssocs) {
        this.eplProdWarnLabelNAssocs = eplProdWarnLabelNAssocs;
    }

    public Set<EplNdcByOutpatientSiteNdcDo> getEplNdcByOutpatientSiteNdcs() {
        return this.eplNdcByOutpatientSiteNdcs;
    }

    public void setEplNdcByOutpatientSiteNdcs(Set<EplNdcByOutpatientSiteNdcDo> eplNdcByOutpatientSiteNdcs) {
        this.eplNdcByOutpatientSiteNdcs = eplNdcByOutpatientSiteNdcs;
    }

    public Set<EplAtcCanisterDo> getEplAtcCanisters() {
        return this.eplAtcCanisters;
    }

    public void setEplAtcCanisters(Set<EplAtcCanisterDo> eplAtcCanisters) {
        this.eplAtcCanisters = eplAtcCanisters;
    }

    public Set<EplReducedCopayDo> getEplReducedCopay() {
        return this.eplReducedCopay;
    }

    public void setEplReducedCopay(Set<EplReducedCopayDo> eplReducedCopay) {
        this.eplReducedCopay = eplReducedCopay;
    }
    
    public Set<EplNdcDo> getEplNdcs() {
        return this.eplNdcs;
    }

    public void setEplNdcs(Set<EplNdcDo> eplNdcs) {
        this.eplNdcs = eplNdcs;
    }

    public Set<EplPartialSaveMgtDo> getEplPartialSaveMgts() {
        return this.eplPartialSaveMgts;
    }

    public void setEplPartialSaveMgts(Set<EplPartialSaveMgtDo> eplPartialSaveMgts) {
        this.eplPartialSaveMgts = eplPartialSaveMgts;
    }

    public Set<EplProductVitalDo> getEplProductVitals() {
        return this.eplProductVitals;
    }

    public void setEplProductVitals(Set<EplProductVitalDo> eplProductVitals) {
        this.eplProductVitals = eplProductVitals;
    }

    public EplVaDispenseUnitDo getEplVaDispenseUnit() {
        return this.eplVaDispenseUnit;
    }

    public void setEplVaDispenseUnit(EplVaDispenseUnitDo eplVaDispenseUnit) {
        this.eplVaDispenseUnit = eplVaDispenseUnit;
    }

    /**
     * toString
     * 
     * @return String
     */
    @Override
    public String toString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("vuid").append("='").append(getVuid()).append("' ");
        buffer.append("masterEntryForVuid").append("='").append(getMasterEntryForVuid()).append("' ");
        buffer.append("requestStatus").append("='").append(getRequestStatus()).append("' ");
        buffer.append("itemStatus").append("='").append(getItemStatus()).append("' ");
        buffer.append("rejectReasonText").append("='").append(getRejectReasonText()).append("' ");
        buffer.append("requestRejectReason").append("='").append(getRequestRejectReason()).append("' ");
        buffer.append("revisionNumber").append("='").append(getRevisionNumber()).append("' ");
        buffer.append("vaProductName").append("='").append(getVaProductName()).append("' ");
        buffer.append("localUse").append("='").append(getLocalUse()).append("' ");
        buffer.append("gcnSeqno").append("='").append(getGcnSeqno()).append("' ");
        buffer.append("singleMultiSourceProduct").append("='").append(getSingleMultiSourceProduct()).append("' ");
        buffer.append("nationalFormularyName").append("='").append(getNationalFormularyName()).append("' ");
        buffer.append("maxDosePerDay").append("='").append(getMaxDosePerDay()).append("' ");
        buffer.append("newWarningLabelListWarn").append("='").append(getNewWarningLabelListWarn()).append("' ");
        buffer.append("tallmanLettering").append("='").append(getTallmanLettering()).append("' ");
        buffer.append("nationalFormularyIndicator").append("='").append(getNationalFormularyIndicator()).append("' ");
        buffer.append("vaPrintName").append("='").append(getVaPrintName()).append("' ");
        buffer.append("strength").append("='").append(getStrength()).append("' ");
        buffer.append("cmopId").append("='").append(getCmopId()).append("' ");
        buffer.append("specimenType").append("='").append(getSpecimenType()).append("' ");
        buffer.append("inactivationDate").append("='").append(getInactivationDate()).append("' ");
        buffer.append("labTestMonitor").append("='").append(getLabTestMonitor()).append("' ");
        buffer.append("ien").append("='").append(getIen()).append("' ");
        buffer.append("overrideDfDoseChkExclusn").append("='").append(getOverrideDfDoseChkExclusn()).append("' ");
        buffer.append("localPrintName").append("='").append(getLocalPrintName()).append("' ");
        buffer.append("localSpecialHandling").append("='").append(getLocalSpecialHandling()).append("' ");
        buffer.append("atcMnemonic").append("='").append(getAtcMnemonic()).append("' ");
        buffer.append("atcChoice").append("='").append(getAtcChoice()).append("' ");
        buffer.append("oneAtcCanister").append("='").append(getOneAtcCanister()).append("' ");
        buffer.append("cmopDispenseYn").append("='").append(getCmopDispenseYn()).append("' ");
        buffer.append("prevMarkedForLocalUseYn").append("='").append(getPrevMarkedForLocalUseYn()).append("' ");
        buffer.append("productDispenseUnitsPerOrd").append("='").append(getProductDispenseUnitsPerOrd()).append("' ");
        buffer.append("createPossibleDosage").append("='").append(getCreatePossibleDosage()).append("' ");
        buffer.append("excludeInteractionCheck").append("='").append(getExcludeInteractionCheck()).append("' ");
        buffer.append("fdaMedGuide").append("='").append(getFdaMedGuide()).append("' ");
        buffer.append("ndfProductIen").append("='").append(getNdfProductIen()).append("' ");
        buffer.append("possibleDosagesToCreate").append("='").append(getPossibleDosagesToCreate()).append("' ");
        buffer.append("productPackage").append("='").append(getProductPackage()).append("' ");
        buffer.append("serviceCode").append("='").append(getServiceCode()).append("' ");
        buffer.append("catMedicFlag").append("='").append(getCatMedicFlag()).append("' ");
        buffer.append("catInvestFlag").append("='").append(getCatInvestFlag()).append("' ");
        buffer.append("catCompoundFlag").append("='").append(getCatCompoundFlag()).append("' ");
        buffer.append("catSupplyFlag").append("='").append(getCatSupplyFlag()).append("' ");
        buffer.append("subcatHerbalFlag").append("='").append(getSubcatHerbalFlag()).append("' ");
        buffer.append("subcatChemoFlag").append("='").append(getSubcatChemoFlag()).append("' ");
        buffer.append("subcatOtcFlag").append("='").append(getSubcatOtcFlag()).append("' ");
        buffer.append("subcatVeterFlag").append("='").append(getSubcatVeterFlag()).append("' ");
        buffer.append("createdBy").append("='").append(getCreatedBy()).append("' ");
        buffer.append("createdDtm").append("='").append(getCreatedDtm()).append("' ");
        buffer.append("lastModifiedBy").append("='").append(getLastModifiedBy()).append("' ");
        buffer.append("lastModifiedDtm").append("='").append(getLastModifiedDtm()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    @Override
    public boolean equals(Object other) {
        if ((this == other)) {
            return true;
        }

        if ((other == null)) {
            return false;
        }

        if (!(other instanceof EplProductDo)) {
            return false;
        }

        EplProductDo castOther = (EplProductDo) other;

        //Don't return all elements, only return the primary key 
        return (
                ((this.getEplId() == castOther.getEplId()) || 
                 (this.getEplId() != null && castOther.getEplId() != null && this.getEplId().equals(castOther.getEplId()))));

      
                       /*       && ((this.getMasterEntryForVuid() == castOther.getMasterEntryForVuid()) || (this.getMasterEntryForVuid() != null
                //Commented out on January 9, 2012 because is equal takes to long to process.
                //Only checking primary key for is equal now
/*               && ((this.getVuid() == castOther.getVuid()) || (this.getVuid() != null && castOther.getVuid() != null && this
                                                                                           && castOther.getMasterEntryForVuid() != null && this
                       .getMasterEntryForVuid().equals(castOther.getMasterEntryForVuid())))
               && ((this.getRequestStatus() == castOther.getRequestStatus()) || (this.getRequestStatus() != null
                                                                                 && castOther.getRequestStatus() != null && this
                       .getRequestStatus().equals(castOther.getRequestStatus())))
               && ((this.getItemStatus() == castOther.getItemStatus()) || (this.getItemStatus() != null
                                                                           && castOther.getItemStatus() != null && this
                       .getItemStatus().equals(castOther.getItemStatus())))
               && ((this.getRejectReasonText() == castOther.getRejectReasonText()) || (this.getRejectReasonText() != null
                                                                                       && castOther.getRejectReasonText() != null && this
                       .getRejectReasonText().equals(castOther.getRejectReasonText())))
               && ((this.getRequestRejectReason() == castOther.getRequestRejectReason()) || (this.getRequestRejectReason() != null
                                                                                             && castOther
                                                                                                     .getRequestRejectReason() != null && this
                       .getRequestRejectReason().equals(castOther.getRequestRejectReason())))
               && ((this.getRevisionNumber() == castOther.getRevisionNumber()) || (this.getRevisionNumber() != null
                                                                                   && castOther.getRevisionNumber() != null && this
                       .getRevisionNumber().equals(castOther.getRevisionNumber())))
               && ((this.getVaProductName() == castOther.getVaProductName()) || (this.getVaProductName() != null
                                                                                 && castOther.getVaProductName() != null && this
                       .getVaProductName().equals(castOther.getVaProductName())))
               && ((this.getLocalUse() == castOther.getLocalUse()) || (this.getLocalUse() != null
                                                                       && castOther.getLocalUse() != null && this.getLocalUse()
                       .equals(castOther.getLocalUse())))
               && ((this.getGcnSeqno() == castOther.getGcnSeqno()) || (this.getGcnSeqno() != null
                                                                       && castOther.getGcnSeqno() != null && this.getGcnSeqno()
                       .equals(castOther.getGcnSeqno())))
               && ((this.getSingleMultiSourceProduct() == castOther.getSingleMultiSourceProduct()) || (this
                       .getSingleMultiSourceProduct() != null && castOther.getSingleMultiSourceProduct() != null && this
                       .getSingleMultiSourceProduct().equals(castOther.getSingleMultiSourceProduct())))
               && ((this.getNationalFormularyName() == castOther.getNationalFormularyName()) || (this
                       .getNationalFormularyName() != null && castOther.getNationalFormularyName() != null && this
                       .getNationalFormularyName().equals(castOther.getNationalFormularyName())))
               && ((this.getMaxDosePerDay() == castOther.getMaxDosePerDay()) || (this.getMaxDosePerDay() != null
                                                                                 && castOther.getMaxDosePerDay() != null && this
                       .getMaxDosePerDay().equals(castOther.getMaxDosePerDay())))
               && ((this.getNewWarningLabelListWarn() == castOther.getNewWarningLabelListWarn()) || (this
                       .getNewWarningLabelListWarn() != null && castOther.getNewWarningLabelListWarn() != null && this
                       .getNewWarningLabelListWarn().equals(castOther.getNewWarningLabelListWarn())))
               && ((this.getTallmanLettering() == castOther.getTallmanLettering()) || (this.getTallmanLettering() != null
                                                                                       && castOther.getTallmanLettering() != null && this
                       .getTallmanLettering().equals(castOther.getTallmanLettering())))
               && ((this.getNationalFormularyIndicator() == castOther.getNationalFormularyIndicator()) || (this
                       .getNationalFormularyIndicator() != null && castOther.getNationalFormularyIndicator() != null && this
                       .getNationalFormularyIndicator().equals(castOther.getNationalFormularyIndicator())))
               && ((this.getVaPrintName() == castOther.getVaPrintName()) || (this.getVaPrintName() != null
                                                                             && castOther.getVaPrintName() != null && this
                       .getVaPrintName().equals(castOther.getVaPrintName())))
               && ((this.getStrength() == castOther.getStrength()) || (this.getStrength() != null
                                                                       && castOther.getStrength() != null && this.getStrength()
                       .equals(castOther.getStrength())))
               && ((this.getCmopId() == castOther.getCmopId()) || (this.getCmopId() != null && castOther.getCmopId() != null && this
                       .getCmopId().equals(castOther.getCmopId())))
               && ((this.getSpecimenType() == castOther.getSpecimenType()) || (this.getSpecimenType() != null
                                                                               && castOther.getSpecimenType() != null && this
                       .getSpecimenType().equals(castOther.getSpecimenType())))
               && ((this.getInactivationDate() == castOther.getInactivationDate()) || (this.getInactivationDate() != null
                                                                                       && castOther.getInactivationDate() != null && this
                       .getInactivationDate().equals(castOther.getInactivationDate())))
               && ((this.getLabTestMonitor() == castOther.getLabTestMonitor()) || (this.getLabTestMonitor() != null
                                                                                   && castOther.getLabTestMonitor() != null && this
                       .getLabTestMonitor().equals(castOther.getLabTestMonitor())))
               && ((this.getIen() == castOther.getIen()) || (this.getIen() != null && castOther.getIen() != null && this
                       .getIen().equals(castOther.getIen())))
               && ((this.getOverrideDfDoseChkExclusn() == castOther.getOverrideDfDoseChkExclusn()) || (this
                       .getOverrideDfDoseChkExclusn() != null && castOther.getOverrideDfDoseChkExclusn() != null && this
                       .getOverrideDfDoseChkExclusn().equals(castOther.getOverrideDfDoseChkExclusn())))
               && ((this.getLocalPrintName() == castOther.getLocalPrintName()) || (this.getLocalPrintName() != null
                                                                                   && castOther.getLocalPrintName() != null && this
                       .getLocalPrintName().equals(castOther.getLocalPrintName())))
               && ((this.getLocalSpecialHandling() == castOther.getLocalSpecialHandling()) || (this.getLocalSpecialHandling() != null
                                                                                               && castOther
                                                                                                       .getLocalSpecialHandling() != null && this
                       .getLocalSpecialHandling().equals(castOther.getLocalSpecialHandling())))
               && ((this.getAtcMnemonic() == castOther.getAtcMnemonic()) || (this.getAtcMnemonic() != null
                                                                             && castOther.getAtcMnemonic() != null && this
                       .getAtcMnemonic().equals(castOther.getAtcMnemonic())))
               && ((this.getAtcChoice() == castOther.getAtcChoice()) || (this.getAtcChoice() != null
                                                                         && castOther.getAtcChoice() != null && this
                       .getAtcChoice().equals(castOther.getAtcChoice())))
               && ((this.getOneAtcCanister() == castOther.getOneAtcCanister()) || (this.getOneAtcCanister() != null
                                                                                   && castOther.getOneAtcCanister() != null && this
                       .getOneAtcCanister().equals(castOther.getOneAtcCanister())))
               && ((this.getCmopDispenseYn() == castOther.getCmopDispenseYn()) || (this.getCmopDispenseYn() != null
                                                                                   && castOther.getCmopDispenseYn() != null && this
                       .getCmopDispenseYn().equals(castOther.getCmopDispenseYn())))
               && ((this.getPrevMarkedForLocalUseYn() == castOther.getPrevMarkedForLocalUseYn()) || (this
                       .getPrevMarkedForLocalUseYn() != null && castOther.getPrevMarkedForLocalUseYn() != null && this
                       .getPrevMarkedForLocalUseYn().equals(castOther.getPrevMarkedForLocalUseYn())))
               && ((this.getProductDispenseUnitsPerOrd() == castOther.getProductDispenseUnitsPerOrd()) || (this
                       .getProductDispenseUnitsPerOrd() != null && castOther.getProductDispenseUnitsPerOrd() != null && this
                       .getProductDispenseUnitsPerOrd().equals(castOther.getProductDispenseUnitsPerOrd())))
               && ((this.getCreatePossibleDosage() == castOther.getCreatePossibleDosage()) || (this.getCreatePossibleDosage() != null
                                                                                               && castOther
                                                                                                       .getCreatePossibleDosage() != null && this
                       .getCreatePossibleDosage().equals(castOther.getCreatePossibleDosage())))
               && ((this.getExcludeInteractionCheck() == castOther.getExcludeInteractionCheck()) || (this
                       .getExcludeInteractionCheck() != null && castOther.getExcludeInteractionCheck() != null && this
                       .getExcludeInteractionCheck().equals(castOther.getExcludeInteractionCheck())))
               && ((this.getFdaMedGuide() == castOther.getFdaMedGuide()) || (this.getFdaMedGuide() != null
                                                                             && castOther.getFdaMedGuide() != null && this
                       .getFdaMedGuide().equals(castOther.getFdaMedGuide())))
               && ((this.getNdfProductIen() == castOther.getNdfProductIen()) || (this.getNdfProductIen() != null
                                                                                 && castOther.getNdfProductIen() != null && this
                       .getNdfProductIen().equals(castOther.getNdfProductIen())))
               && ((this.getPossibleDosagesToCreate() == castOther.getPossibleDosagesToCreate()) || (this
                       .getPossibleDosagesToCreate() != null && castOther.getPossibleDosagesToCreate() != null && this
                       .getPossibleDosagesToCreate().equals(castOther.getPossibleDosagesToCreate())))
               && ((this.getProductPackage() == castOther.getProductPackage()) || (this.getProductPackage() != null
                                                                                   && castOther.getProductPackage() != null && this
                       .getProductPackage().equals(castOther.getProductPackage())))
               && ((this.getServiceCode() == castOther.getServiceCode()) || (this.getServiceCode() != null
                                                                             && castOther.getServiceCode() != null && this
                       .getServiceCode().equals(castOther.getServiceCode())))
               && ((this.getCreatedBy() == castOther.getCreatedBy()) || (this.getCreatedBy() != null
                                                                         && castOther.getCreatedBy() != null && this
                       .getCreatedBy().equals(castOther.getCreatedBy())))
               && ((this.getCreatedDtm() == castOther.getCreatedDtm()) || (this.getCreatedDtm() != null
                                                                           && castOther.getCreatedDtm() != null && this
                       .getCreatedDtm().equals(castOther.getCreatedDtm())))
               && ((this.getLastModifiedBy() == castOther.getLastModifiedBy()) || (this.getLastModifiedBy() != null
                                                                                   && castOther.getLastModifiedBy() != null && this
                       .getLastModifiedBy().equals(castOther.getLastModifiedBy())))
               && ((this.getLastModifiedDtm() == castOther.getLastModifiedDtm()) || (this.getLastModifiedDtm() != null
                                                                                     && castOther.getLastModifiedDtm() != null && this
                       .getLastModifiedDtm().equals(castOther.getLastModifiedDtm())))
               && ((this.getEplCsFedSchedule() == castOther.getEplCsFedSchedule()) || (this.getEplCsFedSchedule() != null
                                                                                       && castOther.getEplCsFedSchedule() != null && this
                       .getEplCsFedSchedule().equals(castOther.getEplCsFedSchedule())))
               && ((this.getEplDoseUnit() == castOther.getEplDoseUnit()) || (this.getEplDoseUnit() != null
                                                                             && castOther.getEplDoseUnit() != null && this
                       .getEplDoseUnit().equals(castOther.getEplDoseUnit())))
               && ((this.getEplDrugUnit() == castOther.getEplDrugUnit()) || (this.getEplDrugUnit() != null
                                                                             && castOther.getEplDrugUnit() != null && this
                       .getEplDrugUnit().equals(castOther.getEplDrugUnit())))
               && ((this.getCatMedicFlag() == castOther.getCatMedicFlag()) || (this.getCatMedicFlag() != null
                                                                             && castOther.getCatMedicFlag() != null && this
                       .getCatMedicFlag().equals(castOther.getCatMedicFlag())))
               && ((this.getCatInvestFlag() == castOther.getCatInvestFlag()) || (this.getCatInvestFlag() != null
                                                                             && castOther.getCatInvestFlag() != null && this
                       .getCatInvestFlag().equals(castOther.getCatInvestFlag())))
               && ((this.getCatCompoundFlag() == castOther.getCatCompoundFlag()) || (this.getCatCompoundFlag() != null
                                                                                       && castOther.getCatCompoundFlag() != null && this
                       .getCatCompoundFlag().equals(castOther.getCatCompoundFlag())))
               && ((this.getCatSupplyFlag() == castOther.getCatSupplyFlag()) || (this.getCatSupplyFlag() != null
                                                                                       && castOther.getCatSupplyFlag() != null && this
                       .getCatSupplyFlag().equals(castOther.getCatSupplyFlag())))
               && ((this.getSubcatHerbalFlag() == castOther.getSubcatHerbalFlag()) || (this.getSubcatHerbalFlag() != null
                                                                                       && castOther.getSubcatHerbalFlag() != null && this
                       .getSubcatHerbalFlag().equals(castOther.getSubcatHerbalFlag())))
               && ((this.getSubcatChemoFlag() == castOther.getSubcatChemoFlag()) || (this.getSubcatChemoFlag() != null
                                                                                       && castOther.getSubcatChemoFlag() != null && this
                       .getSubcatChemoFlag().equals(castOther.getSubcatChemoFlag())))
               && ((this.getSubcatOtcFlag() == castOther.getSubcatOtcFlag()) || (this.getSubcatOtcFlag() != null
                                                                                       && castOther.getSubcatOtcFlag() != null && this
                       .getSubcatOtcFlag().equals(castOther.getSubcatOtcFlag())))
               && ((this.getSubcatVeterFlag() == castOther.getSubcatVeterFlag()) || (this.getSubcatVeterFlag() != null
                                                                                       && castOther.getSubcatVeterFlag() != null && this
                       .getSubcatVeterFlag().equals(castOther.getSubcatVeterFlag())))
               && ((this.getEplOrderUnit() == castOther.getEplOrderUnit()) || (this.getEplOrderUnit() != null
                                                                               && castOther.getEplOrderUnit() != null && this
                       .getEplOrderUnit().equals(castOther.getEplOrderUnit())))
               && ((this.getEplVaGenName() == castOther.getEplVaGenName()) || (this.getEplVaGenName() != null
                                                                               && castOther.getEplVaGenName() != null && this
                       .getEplVaGenName().equals(castOther.getEplVaGenName())))
               && ((this.getEplVaDispenseUnit() == castOther.getEplVaDispenseUnit()) || (this.getEplVaDispenseUnit() != null
                                                                                         && castOther.getEplVaDispenseUnit() != null && this
                       .getEplVaDispenseUnit().equals(castOther.getEplVaDispenseUnit())))*/
    }

    @Override
    public int hashCode() {
        int result = 17;

        result = 37 * result + (getEplId() == null ? 0 : this.getEplId().hashCode());
        result = 37 * result + (getVuid() == null ? 0 : this.getVuid().hashCode());
    
     /*   result = 37 * result + (getMasterEntryForVuid() == null ? 0 : this.getMasterEntryForVuid().hashCode());
        result = 37 * result + (getRequestStatus() == null ? 0 : this.getRequestStatus().hashCode());
        result = 37 * result + (getItemStatus() == null ? 0 : this.getItemStatus().hashCode());
        result = 37 * result + (getRejectReasonText() == null ? 0 : this.getRejectReasonText().hashCode());
        result = 37 * result + (getRequestRejectReason() == null ? 0 : this.getRequestRejectReason().hashCode());
        result = 37 * result + (getRevisionNumber() == null ? 0 : this.getRevisionNumber().hashCode());
        result = 37 * result + (getVaProductName() == null ? 0 : this.getVaProductName().hashCode());
        result = 37 * result + (getLocalUse() == null ? 0 : this.getLocalUse().hashCode());
        result = 37 * result + (getGcnSeqno() == null ? 0 : this.getGcnSeqno().hashCode());
        result = 37 * result + (getSingleMultiSourceProduct() == null ? 0 : this.getSingleMultiSourceProduct().hashCode());
        result = 37 * result + (getNationalFormularyName() == null ? 0 : this.getNationalFormularyName().hashCode());
        result = 37 * result + (getMaxDosePerDay() == null ? 0 : this.getMaxDosePerDay().hashCode());
        result = 37 * result + (getNewWarningLabelListWarn() == null ? 0 : this.getNewWarningLabelListWarn().hashCode());
        result = 37 * result + (getTallmanLettering() == null ? 0 : this.getTallmanLettering().hashCode());
        result = 37 * result + (getNationalFormularyIndicator() == null ? 0 : this.getNationalFormularyIndicator().hashCode());
        result = 37 * result + (getVaPrintName() == null ? 0 : this.getVaPrintName().hashCode());
        result = 37 * result + (getStrength() == null ? 0 : this.getStrength().hashCode());
        result = 37 * result + (getCmopId() == null ? 0 : this.getCmopId().hashCode());
        result = 37 * result + (getSpecimenType() == null ? 0 : this.getSpecimenType().hashCode());
        result = 37 * result + (getInactivationDate() == null ? 0 : this.getInactivationDate().hashCode());
        result = 37 * result + (getLabTestMonitor() == null ? 0 : this.getLabTestMonitor().hashCode());
        result = 37 * result + (getIen() == null ? 0 : this.getIen().hashCode());
        result = 37 * result + (getOverrideDfDoseChkExclusn() == null ? 0 : this.getOverrideDfDoseChkExclusn().hashCode());
        result = 37 * result + (getLocalPrintName() == null ? 0 : this.getLocalPrintName().hashCode());
        result = 37 * result + (getLocalSpecialHandling() == null ? 0 : this.getLocalSpecialHandling().hashCode());
        result = 37 * result + (getAtcMnemonic() == null ? 0 : this.getAtcMnemonic().hashCode());
        result = 37 * result + (getCatMedicFlag() == null ? 0 : this.getCatMedicFlag().hashCode());
        result = 37 * result + (getCatInvestFlag() == null ? 0 : this.getCatInvestFlag().hashCode());
        result = 37 * result + (getCatCompoundFlag() == null ? 0 : this.getCatCompoundFlag().hashCode());
        result = 37 * result + (getCatSupplyFlag() == null ? 0 : this.getCatSupplyFlag().hashCode());
        result = 37 * result + (getSubcatHerbalFlag() == null ? 0 : this.getSubcatHerbalFlag().hashCode());
        result = 37 * result + (getSubcatChemoFlag() == null ? 0 : this.getSubcatChemoFlag().hashCode());
        result = 37 * result + (getSubcatOtcFlag() == null ? 0 : this.getSubcatOtcFlag().hashCode());
        result = 37 * result + (getSubcatVeterFlag() == null ? 0 : this.getSubcatVeterFlag().hashCode());
        result = 37 * result + (getCreatedBy() == null ? 0 : this.getCreatedBy().hashCode());
        result = 37 * result + (getCreatedDtm() == null ? 0 : this.getCreatedDtm().hashCode());
        result = 37 * result + (getLastModifiedBy() == null ? 0 : this.getLastModifiedBy().hashCode());
        result = 37 * result + (getLastModifiedDtm() == null ? 0 : this.getLastModifiedDtm().hashCode());
        result = 37 * result + (getEplCsFedSchedule() == null ? 0 : this.getEplCsFedSchedule().hashCode());
        result = 37 * result + (getEplDoseUnit() == null ? 0 : this.getEplDoseUnit().hashCode());
        result = 37 * result + (getEplDrugUnit() == null ? 0 : this.getEplDrugUnit().hashCode());

        result = 37 * result + (getEplOrderableItem() == null ? 0 : this.getEplOrderableItem().hashCode());
        result = 37 * result + (getEplOrderUnit() == null ? 0 : this.getEplOrderUnit().hashCode());
        result = 37 * result + (getEplVaGenName() == null ? 0 : this.getEplVaGenName().hashCode());
        result = 37 * result + (getEplVaDispenseUnit() == null ? 0 : this.getEplVaDispenseUnit().hashCode());
        result = 37 * result + (getProductDispenseUnitsPerOrd() == null ? 0 : this.getProductDispenseUnitsPerOrd().hashCode());
        result = 37 * result + (getCreatePossibleDosage() == null ? 0 : this.getCreatePossibleDosage().hashCode());
        result = 37 * result + (getExcludeInteractionCheck() == null ? 0 : this.getExcludeInteractionCheck().hashCode());
        result = 37 * result + (getFdaMedGuide() == null ? 0 : this.getFdaMedGuide().hashCode());
        result = 37 * result + (getNdfProductIen() == null ? 0 : this.getNdfProductIen().hashCode());
        result = 37 * result + (getPossibleDosagesToCreate() == null ? 0 : this.getPossibleDosagesToCreate().hashCode());
        result = 37 * result + (getProductPackage() == null ? 0 : this.getProductPackage().hashCode());
        result = 37 * result + (getServiceCode() == null ? 0 : this.getServiceCode().hashCode());*/

        return result;
    }

    /**
     * 
     * @param cmopDispenseYn
     *            cmopDispenseYn property
     */
    public void setCmopDispenseYn(String cmopDispenseYn) {
        this.cmopDispenseYn = cmopDispenseYn;
    }

    /**
     * 
     * @return eplProdDrugTextNAssocs property
     */
    public Set<EplProdDrugTextNAssocDo> getEplProdDrugTextNAssocs() {
        return eplProdDrugTextNAssocs;
    }

    /**
     * 
     * @param eplProdDrugTextNAssocs
     *            eplProdDrugTextNAssocs property
     */
    public void setEplProdDrugTextNAssocs(Set<EplProdDrugTextNAssocDo> eplProdDrugTextNAssocs) {
        this.eplProdDrugTextNAssocs = eplProdDrugTextNAssocs;
    }

    /**
     * 
     * @return eplProdSpecHandlingAssocs property
     */
    public Set<EplProdSpecHandlingAssocDo> getEplProdSpecHandlingAssocs() {
        return eplProdSpecHandlingAssocs;
    }

    /**
     * 
     * @param eplProdSpecHandlingAssocs
     *            eplProdSpecHandlingAssocs property
     */
    public void setEplProdSpecHandlingAssocs(Set<EplProdSpecHandlingAssocDo> eplProdSpecHandlingAssocs) {
        this.eplProdSpecHandlingAssocs = eplProdSpecHandlingAssocs;
    }


}

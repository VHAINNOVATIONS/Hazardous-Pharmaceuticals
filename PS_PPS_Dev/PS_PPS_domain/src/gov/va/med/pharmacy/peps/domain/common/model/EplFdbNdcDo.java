/**
 * Source file created in 2011 by Southwest Research Institute
 * 
 * Generated Oct 25, 2011 3:04:47 PM by Hibernate Tools 3.2.4.GA
 */


package gov.va.med.pharmacy.peps.domain.common.model;


import java.util.Date;


/**
 * EplFdbNdcDo generated by hbm2java
 * 
 * @hibernate.class
 */
public class EplFdbNdcDo extends gov.va.med.pharmacy.peps.domain.common.model.DataObject implements java.io.Serializable {

    // Fields
    public static final String NDC_ID_FK = "ndcIdFk";
    public static final String EPL_NDC = "eplNdc";
    
    private static final long serialVersionUID = 1L; 
    
    private Long ndcIdFk;
    private String dosageForm;
    private String federalDeaClassCode;
    private String federalLegendCode;
    private String formatCode;
    private Long gcnSeqno;
    private String labelerName;
    private String ndc;
    private String ndcFormatted;
    private String obsoleteDate;
    private String packageDescription;
    private Double packageSize;
    private String previousNdc;
    private String replacementNdc;
    private Double strengthNumeric;
    private String strengthUnit;
    private String createdBy;
    private Date createdDtm;
    private String lastModifiedBy;
    private Date lastModifiedDtm;
   

    /**
     * Default Constructor
     */
    public EplFdbNdcDo() {
    }

    /**
     * Minimal Constructor
     * 
     * @param eplId PPSN EPL_ID
     * @param createdBy Created By
     * @param createdDtm Created Date
     * @param eplNdc PPSN EPL_NDC
     */
    public EplFdbNdcDo(Long ndcIdFk, String createdBy, Date createdDtm, EplNdcDo eplNdc) {
        this.ndcIdFk = ndcIdFk;
        this.setCreatedBy(createdBy);
        this.setCreatedDtm(createdDtm);
    }
    
    /**
     * Full Constructor
     * 
     * @param eplId PPSN EPL_ID
     * @param dosageForm EPL_DOSAGE_FORM
     * @param federalDeaClassCode DEA Class Code from Vista
     * @param federalLegendCode
     * @param formatCode
     * @param gcnSeqno
     * @param labelerName
     * @param ndc
     * @param ndcFormatted
     * @param obsoleteDate
     * @param packageDescription
     * @param packageSize
     * @param previousNdc
     * @param replacementNdc
     * @param strengthNumeric
     * @param strengthUnit
     * @param createdBy Created By
     * @param createdDtm Created Date
     * @param lastModifiedBy last user to change the data
     * @param lastModifiedDtm last time the data was changed
     * @param eplNdc PPSN EPL_NDC
     */
    public EplFdbNdcDo(Long ndcIdFk, String dosageForm, String federalDeaClassCode, 
                       String federalLegendCode, String formatCode, Long gcnSeqno, 
                       String labelerName, String ndc, String ndcFormatted, 
                       String obsoleteDate, String packageDescription, 
                       Double packageSize, String previousNdc, String replacementNdc, 
                       Double strengthNumeric, String strengthUnit, String createdBy, 
                       Date createdDtm, String lastModifiedBy, Date lastModifiedDtm, EplNdcDo eplNdc) {
        this.ndcIdFk = ndcIdFk;
        this.dosageForm = dosageForm;
        this.federalDeaClassCode = federalDeaClassCode;
        this.federalLegendCode = federalLegendCode;
        this.formatCode = formatCode;
        this.gcnSeqno = gcnSeqno;
        this.labelerName = labelerName;
        this.ndc = ndc;
        this.ndcFormatted = ndcFormatted;
        this.obsoleteDate = obsoleteDate;
        this.packageDescription = packageDescription;
        this.packageSize = packageSize;
        this.previousNdc = previousNdc;
        this.replacementNdc = replacementNdc;
        this.strengthNumeric = strengthNumeric;
        this.strengthUnit = strengthUnit;
        this.setCreatedBy(createdBy);
        this.setCreatedDtm(createdDtm);
        this.setLastModifiedBy(lastModifiedBy);
        this.setLastModifiedDtm(lastModifiedDtm);
    }
   
    // Property accessors
    public Long getNdcIdFk() {
        return this.ndcIdFk;
    }
    
    public void setNdcIdFk(Long ndcIdFk) {
        this.ndcIdFk = ndcIdFk;
    }
    
    public String getDosageForm() {
        return this.dosageForm;
    }
    
    public void setDosageForm(String dosageForm) {
        this.dosageForm = dosageForm;
    }
    
    public String getFederalDeaClassCode() {
        return this.federalDeaClassCode;
    }
    
    public void setFederalDeaClassCode(String federalDeaClassCode) {
        this.federalDeaClassCode = federalDeaClassCode;
    }
    
    public String getFederalLegendCode() {
        return this.federalLegendCode;
    }
    
    public void setFederalLegendCode(String federalLegendCode) {
        this.federalLegendCode = federalLegendCode;
    }
    
    public String getFormatCode() {
        return this.formatCode;
    }
    
    public void setFormatCode(String formatCode) {
        this.formatCode = formatCode;
    }
    
    public Long getGcnSeqno() {
        return this.gcnSeqno;
    }
    
    public void setGcnSeqno(Long gcnSeqno) {
        this.gcnSeqno = gcnSeqno;
    }
    
    public String getLabelerName() {
        return this.labelerName;
    }
    
    public void setLabelerName(String labelerName) {
        this.labelerName = labelerName;
    }
    
    public String getNdc() {
        return this.ndc;
    }
    
    public void setNdc(String ndc) {
        this.ndc = ndc;
    }
    
    public String getNdcFormatted() {
        return this.ndcFormatted;
    }
    
    public void setNdcFormatted(String ndcFormatted) {
        this.ndcFormatted = ndcFormatted;
    }
    
    public String getObsoleteDate() {
        return this.obsoleteDate;
    }
    
    public void setObsoleteDate(String obsoleteDate) {
        this.obsoleteDate = obsoleteDate;
    }
    
    public String getPackageDescription() {
        return this.packageDescription;
    }
    
    public void setPackageDescription(String packageDescription) {
        this.packageDescription = packageDescription;
    }
    
    public Double getPackageSize() {
        return this.packageSize;
    }
    
    public void setPackageSize(Double packageSize) {
        this.packageSize = packageSize;
    }
    
    public String getPreviousNdc() {
        return this.previousNdc;
    }
    
    public void setPreviousNdc(String previousNdc) {
        this.previousNdc = previousNdc;
    }
    
    public String getReplacementNdc() {
        return this.replacementNdc;
    }
    
    public void setReplacementNdc(String replacementNdc) {
        this.replacementNdc = replacementNdc;
    }
    
    public Double getStrengthNumeric() {
        return this.strengthNumeric;
    }
    
    public void setStrengthNumeric(Double strengthNumeric) {
        this.strengthNumeric = strengthNumeric;
    }
    
    public String getStrengthUnit() {
        return this.strengthUnit;
    }
    
    public void setStrengthUnit(String strengthUnit) {
        this.strengthUnit = strengthUnit;
    }
    
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }
    
    public Date getCreatedDtm() {
        return this.createdDtm;
    }
    
    public void setCreatedDtm(Date createdDtm) {
        this.createdDtm = createdDtm;
    }
    
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }
    
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }
    
    public Date getLastModifiedDtm() {
        return this.lastModifiedDtm;
    }
    
    public void setLastModifiedDtm(Date lastModifiedDtm) {
        this.lastModifiedDtm = lastModifiedDtm;
    }
    

    /**
     * toString
     * 
     * @return String
     */
    @Override
    public String toString() {
        return "EplFdbNdcDo [ndcIdFk=" + ndcIdFk + ", dosageForm=" + dosageForm
                + ", federalDeaClassCode=" + federalDeaClassCode
                + ", federalLegendCode=" + federalLegendCode + ", formatCode="
                + formatCode + ", gcnSeqno=" + gcnSeqno + ", labelerName="
                + labelerName + ", ndc=" + ndc + ", ndcFormatted="
                + ndcFormatted + ", obsoleteDate=" + obsoleteDate
                + ", packageDescription=" + packageDescription
                + ", packageSize=" + packageSize + ", previousNdc="
                + previousNdc + ", replacementNdc=" + replacementNdc
                + ", strengthNumeric=" + strengthNumeric + ", strengthUnit="
                + strengthUnit + ", createdBy=" + createdBy + ", createdDtm="
                + createdDtm + ", lastModifiedBy=" + lastModifiedBy
                + ", lastModifiedDtm=" + lastModifiedDtm 
                + "]";
    }

    /**
     * hashCode
     * 
     * @return result string represents the hash code
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result
                + ((createdBy == null) ? 0 : createdBy.hashCode());
        result = prime * result
                + ((createdDtm == null) ? 0 : createdDtm.hashCode());
        result = prime * result
                + ((dosageForm == null) ? 0 : dosageForm.hashCode());
        result = prime * result + ((ndcIdFk == null) ? 0 : ndcIdFk.hashCode());
        result = prime
                * result
                + ((federalDeaClassCode == null) ? 0 : federalDeaClassCode
                        .hashCode());
        result = prime
                * result
                + ((federalLegendCode == null) ? 0 : federalLegendCode
                        .hashCode());
        result = prime * result
                + ((formatCode == null) ? 0 : formatCode.hashCode());
        result = prime * result
                + ((gcnSeqno == null) ? 0 : gcnSeqno.hashCode());
        result = prime * result
                + ((labelerName == null) ? 0 : labelerName.hashCode());
        result = prime * result
                + ((lastModifiedBy == null) ? 0 : lastModifiedBy.hashCode());
        result = prime * result
                + ((lastModifiedDtm == null) ? 0 : lastModifiedDtm.hashCode());
        result = prime * result + ((ndc == null) ? 0 : ndc.hashCode());
        result = prime * result
                + ((ndcFormatted == null) ? 0 : ndcFormatted.hashCode());
        result = prime * result
                + ((obsoleteDate == null) ? 0 : obsoleteDate.hashCode());
        result = prime
                * result
                + ((packageDescription == null) ? 0 : packageDescription
                        .hashCode());
        result = prime * result
                + ((packageSize == null) ? 0 : packageSize.hashCode());
        result = prime * result
                + ((previousNdc == null) ? 0 : previousNdc.hashCode());
        result = prime * result
                + ((replacementNdc == null) ? 0 : replacementNdc.hashCode());
        result = prime * result
                + ((strengthNumeric == null) ? 0 : strengthNumeric.hashCode());
        result = prime * result
                + ((strengthUnit == null) ? 0 : strengthUnit.hashCode());
        
        return result;
    }

    /**
     * equals
     * 
     * @param obj EplFdbAddDo object
     * @return result returns the hash code results
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        
        if (!super.equals(obj)) {
            return false;
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        EplFdbNdcDo other = (EplFdbNdcDo) obj;
        
        if (createdBy == null) {
            if (other.createdBy != null) {
                return false;
            }
        }
        else if (!createdBy.equals(other.createdBy)) {
            return false;
        }
        
        if (createdDtm == null) {
            if (other.createdDtm != null) {
                return false;
            }
        }
        else if (!createdDtm.equals(other.createdDtm)) {
            return false;
        }
        
        if (dosageForm == null) {
            if (other.dosageForm != null) {
                return false;
            }
        }
        else if (!dosageForm.equals(other.dosageForm)) {
            return false;
        }
        
        if (ndcIdFk == null) {
            if (other.ndcIdFk != null) {
                return false;
            }
        }
        else if (!ndcIdFk.equals(other.ndcIdFk)) {
            return false;
        }
        
        if (federalDeaClassCode == null) {
            if (other.federalDeaClassCode != null) {
                return false;
            }
        }
        else if (!federalDeaClassCode.equals(other.federalDeaClassCode)) {
            return false;
        }
        
        if (federalLegendCode == null) {
            if (other.federalLegendCode != null) {
                return false;
            }
        }
        else if (!federalLegendCode.equals(other.federalLegendCode)) {
            return false;
        }
        
        if (formatCode == null) {
            if (other.formatCode != null) {
                return false;
            }
        }
        else if (!formatCode.equals(other.formatCode)) {
            return false;
        }
        
        if (gcnSeqno == null) {
            if (other.gcnSeqno != null) {
                return false;
            }
        }
        else if (!gcnSeqno.equals(other.gcnSeqno)) {
            return false;
        }
        
        if (labelerName == null) {
            if (other.labelerName != null) {
                return false;
            }
        }
        else if (!labelerName.equals(other.labelerName)) {
            return false;
        }
        
        if (lastModifiedBy == null) {
            if (other.lastModifiedBy != null) {
                return false;
            }
        }
        else if (!lastModifiedBy.equals(other.lastModifiedBy)) {
            return false;
        }
        
        if (lastModifiedDtm == null) {
            if (other.lastModifiedDtm != null) {
                return false;
            }
        }
        else if (!lastModifiedDtm.equals(other.lastModifiedDtm)) {
            return false;
        }
        
        if (ndc == null) {
            if (other.ndc != null) {
                return false;
            }
        }
        else if (!ndc.equals(other.ndc)) {
            return false;
        }
        
        if (ndcFormatted == null) {
            if (other.ndcFormatted != null) {
                return false;
            }
        }
        else if (!ndcFormatted.equals(other.ndcFormatted)) {
            return false;
        }
        
        if (obsoleteDate == null) {
            if (other.obsoleteDate != null) {
                return false;
            }
        }
        else if (!obsoleteDate.equals(other.obsoleteDate)) {
            return false;
        }
        
        if (packageDescription == null) {
            if (other.packageDescription != null) {
                return false;
            }
        }
        else if (!packageDescription.equals(other.packageDescription)) {
            return false;
        }
        
        if (packageSize == null) {
            if (other.packageSize != null) {
                return false;
            }
        }
        else if (!packageSize.equals(other.packageSize)) {
            return false;
        }
        
        if (previousNdc == null) {
            if (other.previousNdc != null) {
                return false;
            }
        }
        else if (!previousNdc.equals(other.previousNdc)) {
            return false;
        }
        
        if (replacementNdc == null) {
            if (other.replacementNdc != null) {
                return false;
            }
        }
        else if (!replacementNdc.equals(other.replacementNdc)) {
            return false;
        }
        
        if (strengthNumeric == null) {
            if (other.strengthNumeric != null) {
                return false;
            }
        }
        else if (!strengthNumeric.equals(other.strengthNumeric)) {
            return false;
        }
        
        if (strengthUnit == null) {
            if (other.strengthUnit != null) {
                return false;
            }
        }
        else if (!strengthUnit.equals(other.strengthUnit)) {
            return false;
        }
        
        return true;
    }
}


